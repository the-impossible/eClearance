# Generated by Django 4.2.3 on 2023-07-10 13:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="reg number",
                    ),
                ),
                (
                    "passport",
                    models.ImageField(
                        default="img/user.png", null=True, upload_to="uploads/passport/"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date_joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="last_login"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Users", "db_table": "Users",},
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "dept_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("dept_title", models.CharField(max_length=30, unique=True)),
            ],
            options={"verbose_name_plural": "Departments", "db_table": "Department",},
        ),
        migrations.CreateModel(
            name="DepartmentalClearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disapproval_reason", models.TextField(blank=True, null=True)),
                ("is_cleared", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Departmental Clearance",
                "db_table": "Departmental Clearance",
            },
        ),
        migrations.CreateModel(
            name="HostelClearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number_of_hostel_items_owed",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("cost_of_hostel_items_owed", models.FloatField(blank=True, null=True)),
                ("is_cleared", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Hostel Clearance",
                "db_table": "Hostel Clearance",
            },
        ),
        migrations.CreateModel(
            name="InternalAuditClearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "departmental_clearance_one",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "departmental_clearance_two",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "school_fee_receipt_one",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "school_fee_receipt_two",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "school_id_card",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "remita_one",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                (
                    "remita_two",
                    models.ImageField(null=True, upload_to="uploads/clearance/"),
                ),
                ("disapproval_reason", models.TextField(blank=True, null=True)),
                ("is_cleared", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Internal Audit Clearance",
                "db_table": "Internal Audit Clearance",
            },
        ),
        migrations.CreateModel(
            name="LibraryClearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number_of_book_owe_departmental",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "cost_of_book_owe_departmental",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "number_of_book_owe_main",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("cost_of_book_owe_main", models.FloatField(blank=True, null=True)),
                ("is_cleared", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Library Clearance",
                "db_table": "Library Clearance",
            },
        ),
        migrations.CreateModel(
            name="Programme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("programme_title", models.CharField(max_length=30, unique=True)),
                (
                    "programme_description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={"verbose_name_plural": "Programmes", "db_table": "Programme",},
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_title", models.CharField(max_length=9, unique=True)),
                (
                    "session_description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={"verbose_name_plural": "Sessions", "db_table": "Session",},
        ),
        migrations.CreateModel(
            name="SportClearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sport_items_owed",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "number_sport_items_owed",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("cost_of_sport_items_owed", models.FloatField(blank=True, null=True)),
                ("is_cleared", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Sport Clearance",
                "db_table": "Sport Clearance",
            },
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_type", models.CharField(max_length=100, unique=True)),
            ],
            options={"verbose_name_plural": "user type", "db_table": "user type",},
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "stud_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.department",
                    ),
                ),
                (
                    "programme",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.programme",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.session",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Student Profile",
                "db_table": "Student Profile",
            },
        ),
        migrations.CreateModel(
            name="StudentClearance",
            fields=[
                (
                    "clearance_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("date_applied", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "departmental_clearance",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.departmentalclearance",
                    ),
                ),
                (
                    "hostel_clearance",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.hostelclearance",
                    ),
                ),
                (
                    "internal_audit_clearance",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.internalauditclearance",
                    ),
                ),
                (
                    "library_clearance",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.libraryclearance",
                    ),
                ),
                (
                    "sport_clearance",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.sportclearance",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eClearanceAuth.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Student Clearance",
                "db_table": "Student Clearance",
            },
        ),
        migrations.CreateModel(
            name="AdministrativeProfile",
            fields=[
                (
                    "profile_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "signature",
                    models.ImageField(null=True, upload_to="uploads/signature/"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Administrative Profile",
                "db_table": "Administrative Profile",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="user_type",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="eClearanceAuth.usertype",
            ),
        ),
    ]
